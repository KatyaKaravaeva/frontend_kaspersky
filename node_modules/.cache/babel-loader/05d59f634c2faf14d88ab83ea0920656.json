{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinakaravaeva/Downloads/frontend-kasper/src/components/table/table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../../assets/styles/table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1\n  });\n  const [sortTableName, setSortTableName] = useState(false);\n  const [sortTableColumn, setSortTableColumn] = useState({\n    active: false,\n    id: null\n  });\n  const {\n    table\n  } = useSelector(state => state.table);\n\n  const getTime = (timeEnd, timeStart, timeNow) => {\n    let getDate = string => new Date(timeNow + \"T\" + string.split(\"-\")[0] + \":\" + string.split(\"-\")[1]);\n\n    let different = getDate(timeEnd) - getDate(timeStart);\n    let hours = Math.floor(different % 86400000 / 3600000);\n    let minutes = Math.round(different % 86400000 % 3600000 / 60000);\n    return hours + \":\" + minutes;\n  };\n\n  const getClassName = group => {\n    switch (group) {\n      case \"Management\":\n        console.log(1);\n        return \"rgb(193, 199, 235);\";\n\n      case \"HR\":\n        console.log(1);\n        return \"rgb(248, 233, 171);\";\n\n      case \"Security\":\n        console.log(1);\n        return \"rgb(248, 248, 213);\";\n\n      case \"Accounting\":\n        console.log(1);\n        return \"rgb(202, 253, 255);\";\n\n      default:\n        return \"rgb(244, 229, 241);\";\n    }\n  };\n\n  const checkSearch = () => {\n    let tableSort;\n\n    if (sortTableName) {\n      tableSort = table.slice().sort(sortArrayByName);\n    } else if (sortTableColumn.id) {\n      tableSort = table.slice().sort(sortArrayByColumn);\n    } else {\n      tableSort = table;\n    }\n\n    if (search.trim().toLowerCase()) {\n      tableSort = sortBySearchName(tableSort);\n    }\n\n    return tableSort.map((row, index) => {\n      if (index <= pagination.limit * pagination.page && index >= pagination.limit * (pagination.page - 1)) return /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: getClassName(row.Group)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.Fullname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.Group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), recieveTable(row.Days)]\n      }, row.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    });\n  };\n\n  const sortBySearchName = tableSort => {\n    return tableSort.filter(row => {\n      if (row.Fullname.toLowerCase().indexOf(search.trim().toLowerCase()) !== -1) {\n        return row;\n      }\n    });\n  };\n\n  const checkIdChoose = index => {\n    setSortTableName(false);\n\n    if (index === sortTableColumn.id) {\n      return sortTableColumn.active ? setSortTableColumn({ ...sortTableColumn,\n        active: false\n      }) : setSortTableColumn({ ...sortTableColumn,\n        active: true\n      });\n    } else {\n      return setSortTableColumn({\n        active: true,\n        id: index\n      });\n    }\n  };\n\n  const sortArrayByName = (x, y) => {\n    return x.Fullname.localeCompare(y.Fullname);\n  };\n\n  const sortArrayByColumn = (x, y) => {\n    let numberForSortX, numberForSortY;\n    x.Days.map((time, index) => {\n      if (Number(time.Date.split(\"-\").pop()) === sortTableColumn.id) {\n        numberForSortX = index;\n      }\n    });\n    y.Days.map((time, index) => {\n      if (Number(time.Date.split(\"-\").pop()) === sortTableColumn.id) {\n        numberForSortY = index;\n      }\n    });\n    let resX = \"0:0\";\n\n    if (x.Days[numberForSortX]) {\n      resX = getTime(x.Days[numberForSortX].End, x.Days[numberForSortX].Start, x.Days[numberForSortX].Date);\n    }\n\n    let totalX = Number(resX.split(\":\")[0]) * 60 + Number(resX.split(\":\")[1]);\n    let resY = \"0:0\";\n\n    if (y.Days[numberForSortY]) {\n      resY = getTime(y.Days[numberForSortY].End, y.Days[numberForSortY].Start, y.Days[numberForSortY].Date);\n    }\n\n    let totalY = Number(resY.split(\":\")[0]) * 60 + Number(resY.split(\":\")[1]);\n\n    if (sortTableColumn.active) {\n      if (totalX > totalY) {\n        return 1;\n      }\n\n      if (totalX < totalY) {\n        return -1;\n      }\n    } else {\n      if (totalX > totalY) {\n        return -1;\n      }\n\n      if (totalX < totalY) {\n        return 1;\n      }\n    }\n\n    return 0;\n  };\n\n  const sortTableByName = () => {\n    setSortTableColumn({\n      active: false,\n      id: null\n    });\n    sortTableName ? setSortTableName(false) : setSortTableName(true);\n  };\n\n  const recieveTable = days => {\n    let layout = [];\n    let totalHours = 0;\n    let totalMin = 0;\n\n    for (let day = 1; day <= 31; ++day) {\n      let flag = false;\n      days.map((time, index) => {\n        if (Number(time.Date.split(\"-\").pop()) === day) {\n          flag = true;\n          let timeRecieve = getTime(time.End, time.Start, time.Date);\n          totalHours += Number(timeRecieve.split(\":\")[0]);\n          totalMin += Number(timeRecieve.split(\":\")[1]);\n          return layout.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", timeRecieve]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 30\n          }, this));\n        }\n      });\n\n      if (!flag) {\n        layout.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    if (totalMin > 60) {\n      let hours = Math.trunc(totalMin / 60);\n      let total = totalHours + hours + \":\" + (totalMin - 60 * hours);\n      layout.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }, this));\n    }\n\n    return layout;\n  };\n\n  const changeLimitPagination = target => {\n    setPagination({ ...pagination,\n      limit: Number(target.value)\n    });\n  };\n\n  const changePageCount = valPage => {\n    setPagination({ ...pagination,\n      page: pagination.page + valPage\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search\",\n      value: search,\n      onChange: event => setSearch(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sortTableByName(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), [...Array(31)].map((x, ind) => /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => checkIdChoose(ind),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: ++ind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: checkSearch()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Rows per page:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => changeLimitPagination(e.target),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 10,\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 15,\n            children: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 20,\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [pagination.limit * (pagination.page - 1) + 1, \" -\", \" \", pagination.limit * pagination.page, \" of \", table.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button-left ${pagination.page > 1 ? \"\" : \"disabled\"}`,\n          onClick: () => pagination.page > 1 ? changePageCount(-1) : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button-right ${pagination.page < Math.ceil(table.length / pagination.limit) ? \" \" : \"disabled\"}`,\n          onClick: () => pagination.page < Math.ceil(table.length / pagination.limit) ? changePageCount(1) : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"9/km6pxvuczek9U9rTk8OiaeZh0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/ekaterinakaravaeva/Downloads/frontend-kasper/src/components/table/table.jsx"],"names":["React","useState","useSelector","Table","search","setSearch","pagination","setPagination","limit","page","sortTableName","setSortTableName","sortTableColumn","setSortTableColumn","active","id","table","state","getTime","timeEnd","timeStart","timeNow","getDate","string","Date","split","different","hours","Math","floor","minutes","round","getClassName","group","console","log","checkSearch","tableSort","slice","sort","sortArrayByName","sortArrayByColumn","trim","toLowerCase","sortBySearchName","map","row","index","backgroundColor","Group","Fullname","recieveTable","Days","filter","indexOf","checkIdChoose","x","y","localeCompare","numberForSortX","numberForSortY","time","Number","pop","resX","End","Start","totalX","resY","totalY","sortTableByName","days","layout","totalHours","totalMin","day","flag","timeRecieve","push","trunc","total","changeLimitPagination","target","value","changePageCount","valPage","event","Array","ind","e","length","ceil"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../../assets/styles/table.css\";\n\nconst Table = () => {\n  const [search, setSearch] = useState(\"\");\n  const [pagination, setPagination] = useState({ limit: 10, page: 1 });\n  const [sortTableName, setSortTableName] = useState(false);\n  const [sortTableColumn, setSortTableColumn] = useState({\n    active: false,\n    id: null,\n  });\n\n  const { table } = useSelector((state) => state.table);\n\n  const getTime = (timeEnd, timeStart, timeNow) => {\n    let getDate = (string) =>\n      new Date(\n        timeNow + \"T\" + string.split(\"-\")[0] + \":\" + string.split(\"-\")[1]\n      );\n    let different = getDate(timeEnd) - getDate(timeStart);\n\n    let hours = Math.floor((different % 86400000) / 3600000);\n    let minutes = Math.round(((different % 86400000) % 3600000) / 60000);\n    return hours + \":\" + minutes;\n  };\n\n  const getClassName = (group) => {\n    switch(group){\n      case \"Management\":\n        console.log(1);\n        return \"rgb(193, 199, 235);\";\n        \n      case \"HR\":\n        console.log(1);\n        return \"rgb(248, 233, 171);\";\n      case \"Security\":\n        console.log(1);\n        return \"rgb(248, 248, 213);\";\n      case \"Accounting\":console.log(1);\n       return \"rgb(202, 253, 255);\";\n      default:\n        return \"rgb(244, 229, 241);\";\n    }\n\n    \n  }\n\n  const checkSearch = () => {\n    let tableSort;\n\n    if (sortTableName) {\n      tableSort = table.slice().sort(sortArrayByName);\n    } else if (sortTableColumn.id) {\n      tableSort = table.slice().sort(sortArrayByColumn);\n    } else {\n      tableSort = table;\n    }\n\n    if (search.trim().toLowerCase()) {\n      tableSort = sortBySearchName(tableSort);\n    }\n    return tableSort.map((row, index) => {\n      if (\n        index <= pagination.limit * pagination.page &&\n        index >= pagination.limit * (pagination.page - 1)\n      )\n        return (\n          <tr key={row.id} style={{ backgroundColor: getClassName(row.Group) }}>\n            <td>{row.Fullname}</td>\n            <td>{row.Group}</td>\n            {recieveTable(row.Days)}\n          </tr>\n        );\n\n      return <></>;\n    });\n  };\n\n  const sortBySearchName = (tableSort) => {\n    return tableSort.filter((row) => {\n      if (\n        row.Fullname.toLowerCase().indexOf(search.trim().toLowerCase()) !== -1\n      ) {\n        return row;\n      }\n    });\n  };\n\n  const checkIdChoose = (index) => {\n    setSortTableName(false);\n\n    if (index === sortTableColumn.id) {\n      return sortTableColumn.active\n        ? setSortTableColumn({ ...sortTableColumn, active: false })\n        : setSortTableColumn({ ...sortTableColumn, active: true });\n    } else {\n      return setSortTableColumn({ active: true, id: index });\n    }\n  };\n\n  const sortArrayByName = (x, y) => {\n    return x.Fullname.localeCompare(y.Fullname);\n  };\n\n  const sortArrayByColumn = (x, y) => {\n    let numberForSortX, numberForSortY;\n    x.Days.map((time, index) => {\n      if (Number(time.Date.split(\"-\").pop()) === sortTableColumn.id) {\n        numberForSortX = index;\n      }\n    });\n\n    y.Days.map((time, index) => {\n      if (Number(time.Date.split(\"-\").pop()) === sortTableColumn.id) {\n        numberForSortY = index;\n      }\n    });\n\n    let resX = \"0:0\";\n\n    if (x.Days[numberForSortX]) {\n      resX = getTime(\n        x.Days[numberForSortX].End,\n        x.Days[numberForSortX].Start,\n        x.Days[numberForSortX].Date\n      );\n    }\n\n    let totalX = Number(resX.split(\":\")[0]) * 60 + Number(resX.split(\":\")[1]);\n\n    let resY = \"0:0\";\n\n    if (y.Days[numberForSortY]) {\n      resY = getTime(\n        y.Days[numberForSortY].End,\n        y.Days[numberForSortY].Start,\n        y.Days[numberForSortY].Date\n      );\n    }\n\n    let totalY = Number(resY.split(\":\")[0]) * 60 + Number(resY.split(\":\")[1]);\n\n    if (sortTableColumn.active) {\n      if (totalX > totalY) {\n        return 1;\n      }\n      if (totalX < totalY) {\n        return -1;\n      }\n    } else {\n      if (totalX > totalY) {\n        return -1;\n      }\n      if (totalX < totalY) {\n        return 1;\n      }\n    }\n    return 0;\n  };\n\n  const sortTableByName = () => {\n    setSortTableColumn({ active: false, id: null });\n    sortTableName ? setSortTableName(false) : setSortTableName(true);\n  };\n\n  const recieveTable = (days) => {\n    let layout = [];\n    let totalHours = 0;\n    let totalMin = 0;\n    for (let day = 1; day <= 31; ++day) {\n      let flag = false;\n      days.map((time, index) => {\n        if (Number(time.Date.split(\"-\").pop()) === day) {\n          flag = true;\n          let timeRecieve = getTime(time.End, time.Start, time.Date);\n          totalHours += Number(timeRecieve.split(\":\")[0]);\n          totalMin += Number(timeRecieve.split(\":\")[1]);\n          return layout.push(<td key={index}> {timeRecieve}</td>);\n        }\n      });\n      if (!flag) {\n        layout.push(<td>0</td>);\n      }\n    }\n    if (totalMin > 60) {\n      let hours = Math.trunc(totalMin / 60);\n      let total = totalHours + hours + \":\" + (totalMin - 60 * hours);\n      layout.push(<td>{total}</td>);\n    }\n    return layout;\n  };\n\n  const changeLimitPagination = (target) => {\n    setPagination({\n      ...pagination,\n      limit: Number(target.value),\n    });\n  };\n\n  const changePageCount = (valPage) => {\n    setPagination({\n      ...pagination,\n      page: pagination.page + valPage,\n    });\n  };\n  return (\n    <>\n      <input\n        placeholder=\"Search\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n      />\n      <table>\n        <thead>\n          <tr>\n            <td>\n              <button onClick={() => sortTableByName()}>\n                <div>User</div>\n              </button>\n            </td>\n            <td>\n              <div>Group</div>\n            </td>\n            {[...Array(31)].map((x, ind) => (\n              <td key={ind} onClick={() => checkIdChoose(ind)}>\n                <div>{++ind}</div>\n              </td>\n            ))}\n            <td>\n              <div>Monthly</div>\n            </td>\n          </tr>\n        </thead>\n        <tbody>{checkSearch()}</tbody>\n      </table>\n      <div className=\"pagination\">\n        <div className=\"pagination-select\">\n          <p>Rows per page:</p>\n          <select onChange={(e) => changeLimitPagination(e.target)}>\n            <option value={10}>10</option>\n            <option value={15}>15</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n        <div className=\"pagination-page\">\n          <p>\n            {pagination.limit * (pagination.page - 1) + 1} -{\" \"}\n            {pagination.limit * pagination.page} of {table.length}\n          </p>\n          <button\n            className={`button-left ${pagination.page > 1 ? \"\" : \"disabled\"}`}\n            onClick={() => (pagination.page > 1 ? changePageCount(-1) : \"\")}\n          >\n            <span></span>\n          </button>\n          <button\n            className={`button-right ${\n              pagination.page < Math.ceil(table.length / pagination.limit)\n                ? \" \"\n                : \"disabled\"\n            }`}\n            onClick={() =>\n              pagination.page < Math.ceil(table.length / pagination.limit)\n                ? changePageCount(1)\n                : \"\"\n            }\n          >\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}